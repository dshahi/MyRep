<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="84" started-at="2015-05-17T21:06:42Z" finished-at="2015-05-17T21:06:42Z">
    <groups>
    </groups>
    <test name="CCW" duration-ms="32" started-at="2015-05-17T21:06:42Z" finished-at="2015-05-17T21:06:42Z">
      <class name="Test.TestSet1">
        <test-method status="PASS" signature="TC1()[pri:0, instance:Test.TestSet1@7bb11784]" name="TC1" duration-ms="12" started-at="2015-05-17T14:06:42Z" finished-at="2015-05-17T14:06:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method status="SKIP" signature="TC2()[pri:0, instance:Test.TestSet1@7bb11784]" name="TC2" duration-ms="0" started-at="2015-05-17T14:06:42Z" finished-at="2015-05-17T14:06:42Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skip this test cases]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skip this test cases
	at Test.TestSet1.TC2(TestSet1.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method status="FAIL" signature="TC_3()[pri:0, instance:Test.TestSet1@7bb11784]" name="TC_3" duration-ms="0" started-at="2015-05-17T14:06:42Z" finished-at="2015-05-17T14:06:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [BAD] but found [Good]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [BAD] but found [Good]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at Test.TestSet1.TC_3(TestSet1.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_3 -->
      </class> <!-- Test.TestSet1 -->
    </test> <!-- CCW -->
    <test name="SFDC" duration-ms="0" started-at="2015-05-17T21:06:42Z" finished-at="2015-05-17T21:06:42Z">
      <class name="Test.TestSet2">
        <test-method status="PASS" signature="TC_1()[pri:0, instance:Test.TestSet2@1fbc7afb]" name="TC_1" duration-ms="0" started-at="2015-05-17T14:06:42Z" finished-at="2015-05-17T14:06:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_1 -->
        <test-method status="PASS" signature="TC_02()[pri:0, instance:Test.TestSet2@1fbc7afb]" name="TC_02" duration-ms="0" started-at="2015-05-17T14:06:42Z" finished-at="2015-05-17T14:06:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02 -->
      </class> <!-- Test.TestSet2 -->
    </test> <!-- SFDC -->
  </suite> <!-- Suite1 -->
</testng-results>
